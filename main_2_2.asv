clear
clc
close all

% MATLAB Skript zur Analyse der Polbewegung
% Laden Sie die Daten von der IERS-Website herunter und speichern Sie sie als CSV oder TXT

% Beispiel: Laden der Daten von einer lokalen Datei
% Passen Sie den Pfad zur Datei an
filename = 'data/eop_iau2000_1846_now.txt';

% Laden der Daten
data = readtable(filename, 'Format','%f%f%f%f%f%f%f%f%f%f%f');
% Annahme: Die Datei enthält Spalten für Jahr, xP, xP_err, yP, yP_err, UT1-TAI, UT1_err, dX, dX_err, dY, dY_err
% Passen Sie die Indizes an, falls die Struktur anders ist
year = data{:, 1};
xP = data{:, 2}; % Polkoordinate x
xP_err = data{:, 3}; % Fehler in x
yP = data{:, 4}; % Polkoordinate y
yP_err = data{:, 5}; % Fehler in y

% Zeit in Jahre umwandeln
t = year;

% 1. Visualisierung der Zeitreihen
figure;
colormap("hot")
subplot(2,1,1);
plot(t, xP);
title('Zeitreihe der Polkoordinate xP');
xlabel('Zeit (Jahre)');
ylabel('xP (arcsec)');

subplot(2,1,2);
plot(t, yP);
title('Zeitreihe der Polkoordinate yP');
xlabel('Zeit (Jahre)');
ylabel('yP (arcsec)');

% 4. Spektralanalyse
Fs = 1 / mean(diff(t)); % Abtastfrequenz
xP_detrended = detrend(xP); % Trend entfernen
yP_detrended = detrend(yP); % Trend entfernen
n = length(t);
f = (0:n-1)*(Fs/n);
xP_fft = fft(xP_detrended);
yP_fft = fft(yP_detrended);
xP_power = abs(xP_fft).^2/n;
yP_power = abs(yP_fft).^2/n;
[~, xP_max_idx] = max(xP_power(2:end/2));
[~, yP_max_idx] = max(yP_power(2:end/2));
xP_main_period = 1/f(xP_max_idx + 1); % +1 wegen Index-Offset
yP_main_period = 1/f(yP_max_idx + 1);
Fs = 1 / mean(diff(t)); % Abtastfrequenz
xP_detrended = detrend(xP); % Trend entfernen
yP_detrended = detrend(yP); % Trend entfernen
n = length(t);
f = (0:n-1)*(Fs/n);
xP_fft = fft(xP_detrended);
yP_fft = fft(yP_detrended);
xP_power = abs(xP_fft).^2/n;
yP_power = abs(yP_fft).^2/n;
period = 1 ./ f;
figure;
subplot(2,1,1);
plot(period(2:end/2), xP_power(2:end/2));
set(gca, 'XScale', 'log'); % Logarithmische Skala für bessere Darstellung
title('Leistungsspektrum der Polkoordinate xP');
xlabel('Periode (Jahre)');
ylabel('Leistung');

subplot(2,1,2);
plot(period(2:end/2), yP_power(2:end/2));
set(gca, 'XScale', 'log'); % Logarithmische Skala für bessere Darstellung
title('Leistungsspektrum der Polkoordinate yP');
xlabel('Periode (Jahre)');
ylabel('Leistung');


% Ergebnisse ausgeben
disp(['Hauptperiode in xP: ', num2str(xP_main_period), ' Jahre']);
disp(['Hauptperiode in yP: ', num2str(yP_main_period), ' Jahre']);

% 5. Säkulare Polbewegung
p = polyfit(t, xP, 1);
xP_trend = polyval(p, t);
dxP_dt = p(1); % Änderung pro Jahr

p = polyfit(t, yP, 1);
yP_trend = polyval(p, t);
dyP_dt = p(1); % Änderung pro Jahr

figure;
plot(t, xP, t, xP_trend);
hold on;
plot(t, yP, t, yP_trend);
title('Säkulare Polbewegung');
xlabel('Zeit (Jahre)');
ylabel('Polkoordinate (arcsec)');
legend('xP', 'xP-Trend', 'yP', 'yP-Trend');

% Heatmap
figure;
colormap(flipud(bone))
hist3([xP, yP], 'CdataMode', 'auto', 'FaceColor', 'interp');
colorbar;
title('Heatmap der Polkoordinaten');
xlabel('xP (arcsec)');
ylabel('yP (arcsec)');

% Spektrogramm
figure;
[s, f, t_spectro] = spectrogram(detrend(xP), 256, [], [], Fs, 'yaxis');
period = 1 ./ f;
pcolor(t_spectro + t(1), period, abs(s)); % Verschiebung von t_spectro für die korrekte Zeitdarstellung
shading interp;
colorbar;
title('Spektrogramm der Polkoordinate xP');
xlabel('Zeit (Jahre)');
ylabel('Periode (Jahre)');
set(gca, 'YScale', 'log'); % Logarithmische Skala für bessere Darstellung
ylim([min(period) max(period)]);

% Polar Plot
theta = atan2(yP, xP);
rho = sqrt(xP.^2 + yP.^2);
figure;
polarplot(theta, rho);
title('Polar Plot der Polbewegung');

% 3D Plot
figure;
plot3(xP, yP, t, 'o-');
grid on;
title('Interaktive 3D-Visualisierung der Polbewegung');
xlabel('xP (arcsec)');
ylabel('yP (arcsec)');
zlabel('Zeit (Jahre)');
rotate3d on;

% Dichteplot
figure;
ksdensity([xP yP]);
title('Dichteplot der Polkoordinaten');
xlabel('xP (arcsec)');
ylabel('yP (arcsec)');

% Konturplot
[X, Y] = meshgrid(linspace(min(xP), max(xP), 100), linspace(min(yP), max(yP), 100));
Z = griddata(xP, yP, t, X, Y);
figure;
contourf(X, Y, Z);
colorbar;
title('Konturplot der Polkoordinaten');
xlabel('xP (arcsec)');
ylabel('yP (arcsec)');

% Histogramm
figure;
subplot(2,1,1);
histogram(xP, 30);
title('Histogramm der Polkoordinate xP');
xlabel('xP (arcsec)');
ylabel('Häufigkeit');

subplot(2,1,2);
histogram(yP, 30);
title('Histogramm der Polkoordinate yP');
xlabel('yP (arcsec)');
ylabel('Häufigkeit');

% Monatsdurchschnitt
months = month(datetime(t*365.25, 'ConvertFrom', 'datenum'));
monthly_avg_xP = accumarray(months, xP, [], @mean);
monthly_avg_yP = accumarray(months, yP, [], @mean);

% Wavelet
figure;
plot(1:12, monthly_avg_xP, '-o', 'MarkerFaceColor','auto');
hold on;
plot(1:12, monthly_avg_yP, '-o', 'MarkerFaceColor','auto');
title('Monatliche Durchschnittswerte der Polkoordinaten');
xlabel('Monat');
ylabel('Polkoordinate (arcsec)');
legend('xP', 'yP');


% Continuous Wavelet Transform mit Periodenlänge
figure;
[wt, f] = cwt(xP, 'amor', Fs);
period = 1 ./ f;
pcolor(t, period, abs(wt));
shading interp;
colorbar;
title('Continuous Wavelet Transform von xP');
xlabel('Zeit (Jahre)');
ylabel('Periode (Jahre)');
set(gca, 'YScale', 'log'); % Logarithmische Skala für bessere Darstellung
ylim([min(period) max(period)]);

% Wahl der Hauptperiode
main_period = min(xP_main_period, yP_main_period);

% Monatsweise Mittelung über eine Hauptperiode
months = month(datetime(t*365.25, 'ConvertFrom', 'datenum'));
unique_months = unique(months);
num_months = length(unique_months);

monthly_avg_xP = zeros(num_months, 1);
monthly_avg_yP = zeros(num_months, 1);

for i = 1:num_months
    monthly_avg_xP(i) = mean(xP(months == unique_months(i)));
    monthly_avg_yP(i) = mean(yP(months == unique_months(i)));
end

% Wiederholung über zwei Hauptperioden
repeated_xP = repmat(monthly_avg_xP, 2, 1);
repeated_yP = repmat(monthly_avg_yP, 2, 1);
repeated_time = (0:(2*num_months-1)) * (main_period / num_months);

% 3D-Darstellung
figure;
plot3(repeated_time, repeated_xP, repeated_yP, 'o-');
grid on;
title('Polbewegung über zwei Hauptperioden');
xlabel('Zeit (Jahre)');
ylabel('xP (arcsec)');
zlabel('yP (arcsec)');
rotate3d on;

disp(['Säkulare Änderung in xP: ', num2str(dxP_dt), ' arcsec/Jahr']);
disp(['Säkulare Änderung in yP: ', num2str(dyP_dt), ' arcsec/Jahr']);
